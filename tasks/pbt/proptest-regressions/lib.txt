
cc 7e578d9007d4649fad07ff5438f4db890e4033343248b5810cd8ee992840abae # shrinks to mut original_program = Program { span: Span { start: 0, end: 0 }, source_text: "", comments: Vec([]), hashbang: None, directives: Vec([]), body: Vec([ExpressionStatement(ExpressionStatement { span: Span { start: 0, end: 0 }, expression: ConditionalExpression(ConditionalExpression { span: Span { start: 0, end: 0 }, test: BooleanLiteral(BooleanLiteral { span: Span { start: 0, end: 0 }, value: false }), consequent: LogicalExpression(LogicalExpression { span: Span { start: 0, end: 0 }, left: LogicalExpression(LogicalExpression { span: Span { start: 0, end: 0 }, left: BooleanLiteral(BooleanLiteral { span: Span { start: 0, end: 0 }, value: false }), right: BooleanLiteral(BooleanLiteral { span: Span { start: 0, end: 0 }, value: false }), operator: Or }), right: BooleanLiteral(BooleanLiteral { span: Span { start: 0, end: 0 }, value: false }), operator: And }), alternate: BooleanLiteral(BooleanLiteral { span: Span { start: 0, end: 0 }, value: false }) }) })]), scope_id: Cell { value: None }, source_type: SourceType { language: TypeScript, module_kind: Module, variant: Standard } }
